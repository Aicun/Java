package com.lac.spring.test;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.junit.Test;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.servlet.view.InternalResourceView;

import com.lac.spring.controller.HomeController;
import com.lac.spring.controller.SpittleController;
import com.lac.spring.dao.SpittleRepository;
import com.lac.spring.po.Spittle;

public class ControllerTest {

	@Test
	public void testHomePage() throws Exception {
		HomeController controller = new HomeController();
		MockMvc mockMvc  = MockMvcBuilders.standaloneSetup(controller).build();
		mockMvc.perform(MockMvcRequestBuilders.get("/")).andExpect(MockMvcResultMatchers.view().name("index"));
	}
	
	@Test
	public void shouldShowRecentSpittles() throws Exception {
	List<Spittle> expectedSpittles = createSpittleList(20);
	SpittleRepository mockRepository =	mock(SpittleRepository.class);
	when(mockRepository.findSpittles(Long.MAX_VALUE, 20)).thenReturn(expectedSpittles);
	SpittleController controller =	new SpittleController(mockRepository);
	//SpittleController controller =	new SpittleController(mockRepository);
	MockMvc mockMvc = standaloneSetup(controller)
			.setSingleView(new InternalResourceView("/WEB-INF/views/spittles.jsp")).build();
	mockMvc.perform(MockMvcRequestBuilders.get("/spittles"))
	.andExpect(MockMvcResultMatchers.view().name("spittles"))
	.andExpect(MockMvcResultMatchers.model().attributeExists("spittleList"))
	.andExpect(MockMvcResultMatchers.model().attribute("spittleList",
			MockMvcRequestBuilders.hasItems(expectedSpittles.toArray())));
	}
	
	private List<Spittle> createSpittleList(int count) {
	List<Spittle> spittles = new ArrayList<Spittle>();
	for (int i=0; i < count; i++) {
	spittles.add(new Spittle("Spittle " + i, new Date()));
	}
	return spittles;
	}
}
