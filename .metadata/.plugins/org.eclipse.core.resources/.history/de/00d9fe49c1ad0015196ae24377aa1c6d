package concurrency.awt;

import java.util.concurrent.Semaphore;

public class Sorter implements Runnable {

	private Double[] values;
	private ArrayComponent component;
	private Semaphore gate;
	private static final int DELAY = 100;
	private volatile boolean run;
	private static final int VALUES_LENGTH = 30;
	
	public Sorter(ArrayComponent component) {
		values = new Double[VALUES_LENGTH];
		for(int i=0;i<values.length;i++){
			values[i] = new Double(Math.random());
		}
		this.component = component;
		this.gate = new Semaphore(1);
		this.run = false;
	}
	
	public void setRun(){
		run = true;
		gate.release();
	}
	
	public void setStep(){
		run = false;
		gate.release();
	}
	
	@Override
	public void run() {

	}

}
